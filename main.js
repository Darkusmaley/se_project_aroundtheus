!function(){"use strict";class e{constructor(e,t,s,n,i){this._name=e.name,this._link=e.link,this.isLiked=e.isLiked,this.id=e._id,this._cardSelector=t,this._handleCardClick=s,this._handleCardDelete=n,this._handleCardLike=i}getView(){return this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0),this._setEventListeners(),this._renderLikes(),this._cardElement}_setEventListeners(){this._likeButton=this._cardElement.querySelector(".card__like-button"),this._deleteButton=this._cardElement.querySelector("#card-delete-button");const e=this._cardElement.querySelector(".card__image"),t=this._cardElement.querySelector(".card__heading");this._likeButton.addEventListener("click",(()=>{this._handleCardLike(this)})),this._deleteButton.addEventListener("click",(()=>{this._handleCardDelete(this)})),e.src=this._link,e.alt=this._name,t.textContent=this._name,e.addEventListener("click",(()=>{this._handleCardClick(this._name,this._link)}))}setLikes(e){this.isLiked=e,this._renderLikes()}_renderLikes(){this.isLiked?this._likeButton.classList.add("card__like-button_active"):this._likeButton.classList.remove("card__like-button_active")}getId(){return this.id}deleteCard(){this._cardElement.remove(),this._cardElement=null}}class t{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t}_hasInvalidInput(){return!this._inputEls.every((e=>e.validity.valid))}_showInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputerror(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputerror(e)}_toggleButtonState(){this._hasInvalidInput(this._inputEls)?this.disableBtn():this._enableBtn()}disableBtn(){this._submitBtn.classList.add(this._inactiveButtonClass),this._submitBtn.disabled=!0}_enableBtn(){this._submitBtn.classList.remove(this._inactiveButtonClass),this._submitBtn.disabled=!1}_setEventListeners(){this._inputEls=[...this._formElement.querySelectorAll(this._inputSelector)],this._submitBtn=this._formElement.querySelector(this._submitButtonSelector),this._toggleButtonState(),this._inputEls.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}resetValidation(){this._toggleButtonState(),this._inputEls.forEach((e=>{this._hideInputerror(e)}))}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}}class s{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._handleEsc=e=>{this._handleEscClose(e)}}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEsc)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEsc)}_handleEscClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this._popupElement.addEventListener("click",(e=>{(e.target===this._popupElement||e.target.classList.contains("modal__close-button"))&&this.close()}))}}class n extends s{constructor(e,t){super({popupSelector:e}),this._handleFormSubmit=t,this._popupForm=this._popupElement.querySelector(".modal__form"),this._inputs=this._popupForm.querySelectorAll(".modal__input"),this._saveButton=this._popupForm.querySelector(".modal__form-button"),this._saveButtonText=this._saveButton.textContent}_getInputValues(){return this._inputValues={},this._inputs.forEach((e=>this._inputValues[e.name]=e.value)),this._inputValues}resetForm(){this._popupForm.reset()}getFormName(){return this._popupForm.getAttribute("name")}setEventListeners(){this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())})),super.setEventListeners()}setLoading(e){this._saveButton.textContent=1==e?"Saving...":this._saveButtonText}}document.getElementById("AroundtheUS").src="229667a1c52df21375a8.svg";const i=document.querySelector("#profile-edit-button"),r=document.querySelector("#avatar-edit-button"),o=document.querySelector("#name"),a=document.querySelector("#description"),l=document.querySelector(".profile__add-button"),d={};function h(e){g.open(),g.setSubmitAction((()=>{g.setLoading(!0),S.deleteCard(e.id).then((()=>{g.close(),e.deleteCard()})).catch((e=>{console.log(e)})).finally((()=>{g.setLoading(!1)}))}))}function c(e,t){p.open(e,t)}function u(e){e.isLiked?S.unlikeCard(e.getId()).then((t=>{e.setLikes(t.isLiked)})).catch((e=>{console.log(e)})):S.likeCard(e.getId()).then((t=>{e.setLikes(t.isLiked)})).catch((e=>{console.log(e)}))}function _(t){return new e(t,"#template",c,h,u).getView()}var m;m={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__form-button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},Array.from(document.querySelectorAll(m.formSelector)).forEach((e=>{const s=new t(m,e),n=e.getAttribute("name");d[n]=s,s.enableValidation()}));const p=new class extends s{constructor(e){super({popupSelector:e}),this._imagePreview=this._popupElement.querySelector("#image-preview"),this._imageCaption=document.querySelector("#image-preview-caption")}open(e,t){this._imagePreview.src=t,this._imagePreview.alt=e,this._imageCaption.textContent=e,super.open()}}("#image-preview-modal");p.setEventListeners();const v=new n("#profile-edit-modal",(function(e){v.setLoading(!0),S.editProfileInfo(e.name,e.description).then((e=>{E.setUserInfo(e),v.close()})).catch((e=>{console.log(e)})).finally((()=>{v.setLoading(!1)}))}));v.setEventListeners(),i.addEventListener("click",(function(e){const{name:t,job:s}=E.getUserInfo();a.value=s,o.value=t,v.open(),d[v.getFormName("profile-edit-form")].resetValidation()}));const E=new class{constructor(e,t,s){this._name=document.querySelector(e),this._job=document.querySelector(t),this._avatar=document.querySelector(s)}getUserInfo(){return{name:this._name.textContent,job:this._job.textContent}}setUserInfo(e){let{name:t,about:s}=e;this._name.textContent=t,this._job.textContent=s}setAvatar(e){let{avatar:t}=e;this._avatar.src=t}}(".profile__title",".profile__description",".profile__image"),b=new n("#new-card-modal",(function(e){b.setLoading(!0),S.addCard(e).then((e=>{L.addItems(_(e)),d[b.getFormName("add-card-form")].disableBtn(),b.close(),b.resetForm()})).catch((e=>{console.log(e)})).finally((()=>{b.setLoading(!1)}))}));b.setEventListeners(),l.addEventListener("click",(function(){b.open()}));const f=new n("#avatar-change-modal",(function(e){f.setLoading(!0),S.updateAvatar(e.link).then((e=>{console.log,E.setAvatar(e),f.close(),f.resetForm()})).catch((e=>{console.log(e)})).finally((()=>{f.setLoading(!1)}))}));f.setEventListeners(),r.addEventListener("click",(()=>{f.open()}));const g=new class extends s{constructor(e){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._submitButton=this._popupForm.querySelector(".modal__form-button"),this._submitButtonText=this._submitButton.textContent}setLoading(e){this._submitButton.textContent=e?"Saving..":this._submitButtonText}setSubmitAction(e){this._handleFormSubmit=e}setEventListeners(){this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit()})),super.setEventListeners()}}("#card-delete-modal");g.setEventListeners();const L=new class{constructor(e,t){let{renderer:s}=e;this._containerElement=document.querySelector(t),this._renderer=s}renderItems(e){e.forEach((e=>{this._renderer(e)}))}addItems(e){this._containerElement.prepend(e)}}({renderer:e=>{L.addItems(_(e))}},".cards__list"),S=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{method:"GET",headers:this._headers}).then(this._checkResponse)}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error:${e.status}`)}loadUserInfo(){return fetch(`${this._baseUrl}/users/me`,{method:"GET",headers:this._headers}).then(this._checkResponse)}editProfileInfo(e,t){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e,about:t})}).then(this._checkResponse)}addCard(e){return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:e.name,link:e.link})}).then(this._checkResponse)}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}likeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then(this._checkResponse)}unlikeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}updateAvatar(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then(this._checkResponse)}loadPage(){return Promise.all([this.getInitialCards(),this.loadUserInfo()])}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"525b4ade-ecb7-453a-b4ec-d9e0e572249f","Content-Type":"application/json"}});S.getInitialCards().then((e=>{L.renderItems(e)})).catch((e=>{console.log(e)})),S.loadUserInfo().then((e=>{E.setUserInfo(e),E.setAvatar(e)})).catch((e=>{console.log(e)}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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IjpbIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvY29tcG9uZW50cy9DYXJkLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL0Zvcm1WYWxpZGF0aW9uLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL1BvcHVwLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL3BhZ2VzL2luZGV4LmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy91dGlscy9jb25zdGFudHMuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvVXNlckluZm8uanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBDb25maXJtYXRpb24uanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvU2VjdGlvbi5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvY29tcG9uZW50cy9BcGkuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2FyZCB7XHJcbiAgY29uc3RydWN0b3IoXHJcbiAgICBkYXRhLFxyXG4gICAgY2FyZFNlbGVjdG9yLFxyXG4gICAgaGFuZGxlQ2FyZENsaWNrLFxyXG4gICAgaGFuZGxlQ2FyZERlbGV0ZSxcclxuICAgIGhhbmRsZUNhcmRMaWtlXHJcbiAgKSB7XHJcbiAgICB0aGlzLl9uYW1lID0gZGF0YS5uYW1lO1xyXG4gICAgdGhpcy5fbGluayA9IGRhdGEubGluaztcclxuICAgIHRoaXMuaXNMaWtlZCA9IGRhdGEuaXNMaWtlZDtcclxuICAgIHRoaXMuaWQgPSBkYXRhLl9pZDtcclxuICAgIHRoaXMuX2NhcmRTZWxlY3RvciA9IGNhcmRTZWxlY3RvcjtcclxuICAgIHRoaXMuX2hhbmRsZUNhcmRDbGljayA9IGhhbmRsZUNhcmRDbGljaztcclxuICAgIHRoaXMuX2hhbmRsZUNhcmREZWxldGUgPSBoYW5kbGVDYXJkRGVsZXRlO1xyXG4gICAgdGhpcy5faGFuZGxlQ2FyZExpa2UgPSBoYW5kbGVDYXJkTGlrZTtcclxuICB9XHJcblxyXG4gIGdldFZpZXcoKSB7XHJcbiAgICB0aGlzLl9jYXJkRWxlbWVudCA9IGRvY3VtZW50XHJcbiAgICAgIC5xdWVyeVNlbGVjdG9yKHRoaXMuX2NhcmRTZWxlY3RvcilcclxuICAgICAgLmNvbnRlbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkXCIpXHJcbiAgICAgIC5jbG9uZU5vZGUodHJ1ZSk7XHJcbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xyXG4gICAgdGhpcy5fcmVuZGVyTGlrZXMoKTtcclxuICAgIHJldHVybiB0aGlzLl9jYXJkRWxlbWVudDtcclxuICB9XHJcblxyXG4gIF9zZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgIHRoaXMuX2xpa2VCdXR0b24gPSB0aGlzLl9jYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2xpa2UtYnV0dG9uXCIpO1xyXG4gICAgdGhpcy5fZGVsZXRlQnV0dG9uID0gdGhpcy5fY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIiNjYXJkLWRlbGV0ZS1idXR0b25cIik7XHJcbiAgICBjb25zdCBjYXJkSW1hZ2VFbCA9IHRoaXMuX2NhcmRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9faW1hZ2VcIik7XHJcbiAgICBjb25zdCBjYXJkVGl0bGVFbCA9IHRoaXMuX2NhcmRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9faGVhZGluZ1wiKTtcclxuXHJcbiAgICB0aGlzLl9saWtlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgICAgIHRoaXMuX2hhbmRsZUNhcmRMaWtlKHRoaXMpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgdGhpcy5fZGVsZXRlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgICAgIHRoaXMuX2hhbmRsZUNhcmREZWxldGUodGhpcyk7XHJcbiAgICB9KTtcclxuXHJcbiAgICBjYXJkSW1hZ2VFbC5zcmMgPSB0aGlzLl9saW5rO1xyXG4gICAgY2FyZEltYWdlRWwuYWx0ID0gdGhpcy5fbmFtZTtcclxuICAgIGNhcmRUaXRsZUVsLnRleHRDb250ZW50ID0gdGhpcy5fbmFtZTtcclxuXHJcbiAgICBjYXJkSW1hZ2VFbC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gICAgICB0aGlzLl9oYW5kbGVDYXJkQ2xpY2sodGhpcy5fbmFtZSwgdGhpcy5fbGluayk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIHNldExpa2VzKGlzTGlrZWQpIHtcclxuICAgIHRoaXMuaXNMaWtlZCA9IGlzTGlrZWQ7XHJcbiAgICB0aGlzLl9yZW5kZXJMaWtlcygpO1xyXG4gIH1cclxuXHJcbiAgX3JlbmRlckxpa2VzKCkge1xyXG4gICAgaWYgKHRoaXMuaXNMaWtlZCkge1xyXG4gICAgICB0aGlzLl9saWtlQnV0dG9uLmNsYXNzTGlzdC5hZGQoXCJjYXJkX19saWtlLWJ1dHRvbl9hY3RpdmVcIik7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLl9saWtlQnV0dG9uLmNsYXNzTGlzdC5yZW1vdmUoXCJjYXJkX19saWtlLWJ1dHRvbl9hY3RpdmVcIik7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBnZXRJZCgpIHtcclxuICAgIHJldHVybiB0aGlzLmlkO1xyXG4gIH1cclxuXHJcbiAgZGVsZXRlQ2FyZCgpIHtcclxuICAgIHRoaXMuX2NhcmRFbGVtZW50LnJlbW92ZSgpO1xyXG4gICAgdGhpcy5fY2FyZEVsZW1lbnQgPSBudWxsO1xyXG4gIH1cclxufVxyXG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBGb3JtVmFsaWRhdG9yIHtcclxuICBjb25zdHJ1Y3Rvcihjb25maWcsIGZvcm1FbGVtZW50KSB7XHJcbiAgICB0aGlzLl9pbnB1dFNlbGVjdG9yID0gY29uZmlnLmlucHV0U2VsZWN0b3I7XHJcbiAgICB0aGlzLl9zdWJtaXRCdXR0b25TZWxlY3RvciA9IGNvbmZpZy5zdWJtaXRCdXR0b25TZWxlY3RvcjtcclxuICAgIHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MgPSBjb25maWcuaW5hY3RpdmVCdXR0b25DbGFzcztcclxuICAgIHRoaXMuX2lucHV0RXJyb3JDbGFzcyA9IGNvbmZpZy5pbnB1dEVycm9yQ2xhc3M7XHJcbiAgICB0aGlzLl9lcnJvckNsYXNzID0gY29uZmlnLmVycm9yQ2xhc3M7XHJcbiAgICB0aGlzLl9mb3JtRWxlbWVudCA9IGZvcm1FbGVtZW50O1xyXG4gIH1cclxuXHJcbiAgX2hhc0ludmFsaWRJbnB1dCgpIHtcclxuICAgIHJldHVybiAhdGhpcy5faW5wdXRFbHMuZXZlcnkoKGlucHV0RWwpID0+IGlucHV0RWwudmFsaWRpdHkudmFsaWQpO1xyXG4gIH1cclxuXHJcbiAgX3Nob3dJbnB1dEVycm9yKGlucHV0RWwpIHtcclxuICAgIGNvbnN0IGVycm9yTWVzc2FnZUVsID0gdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihcclxuICAgICAgYCMke2lucHV0RWwuaWR9LWVycm9yYFxyXG4gICAgKTtcclxuICAgIGVycm9yTWVzc2FnZUVsLnRleHRDb250ZW50ID0gaW5wdXRFbC52YWxpZGF0aW9uTWVzc2FnZTtcclxuICAgIGVycm9yTWVzc2FnZUVsLmNsYXNzTGlzdC5hZGQodGhpcy5fZXJyb3JDbGFzcyk7XHJcbiAgfVxyXG5cclxuICBfaGlkZUlucHV0ZXJyb3IoaW5wdXRFbCkge1xyXG4gICAgY29uc3QgZXJyb3JNZXNzYWdlRWwgPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gICAgICBgIyR7aW5wdXRFbC5pZH0tZXJyb3JgXHJcbiAgICApO1xyXG4gICAgaW5wdXRFbC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2lucHV0RXJyb3JDbGFzcyk7XHJcbiAgICBlcnJvck1lc3NhZ2VFbC50ZXh0Q29udGVudCA9IFwiXCI7XHJcbiAgICBlcnJvck1lc3NhZ2VFbC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2Vycm9yQ2xhc3MpO1xyXG4gIH1cclxuXHJcbiAgX2NoZWNrSW5wdXRWYWxpZGl0eShpbnB1dEVsKSB7XHJcbiAgICBpZiAoIWlucHV0RWwudmFsaWRpdHkudmFsaWQpIHtcclxuICAgICAgcmV0dXJuIHRoaXMuX3Nob3dJbnB1dEVycm9yKGlucHV0RWwpO1xyXG4gICAgfVxyXG5cclxuICAgIHRoaXMuX2hpZGVJbnB1dGVycm9yKGlucHV0RWwpO1xyXG4gIH1cclxuXHJcbiAgX3RvZ2dsZUJ1dHRvblN0YXRlKCkge1xyXG4gICAgaWYgKHRoaXMuX2hhc0ludmFsaWRJbnB1dCh0aGlzLl9pbnB1dEVscykpIHtcclxuICAgICAgdGhpcy5kaXNhYmxlQnRuKCk7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIHRoaXMuX2VuYWJsZUJ0bigpO1xyXG4gIH1cclxuXHJcbiAgZGlzYWJsZUJ0bigpIHtcclxuICAgIHRoaXMuX3N1Ym1pdEJ0bi5jbGFzc0xpc3QuYWRkKHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MpO1xyXG4gICAgdGhpcy5fc3VibWl0QnRuLmRpc2FibGVkID0gdHJ1ZTtcclxuICB9XHJcblxyXG4gIF9lbmFibGVCdG4oKSB7XHJcbiAgICB0aGlzLl9zdWJtaXRCdG4uY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcclxuICAgIHRoaXMuX3N1Ym1pdEJ0bi5kaXNhYmxlZCA9IGZhbHNlO1xyXG4gIH1cclxuXHJcbiAgX3NldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgdGhpcy5faW5wdXRFbHMgPSBbXHJcbiAgICAgIC4uLnRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3JBbGwodGhpcy5faW5wdXRTZWxlY3RvciksXHJcbiAgICBdO1xyXG4gICAgdGhpcy5fc3VibWl0QnRuID0gdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihcclxuICAgICAgdGhpcy5fc3VibWl0QnV0dG9uU2VsZWN0b3JcclxuICAgICk7XHJcbiAgICB0aGlzLl90b2dnbGVCdXR0b25TdGF0ZSgpO1xyXG4gICAgdGhpcy5faW5wdXRFbHMuZm9yRWFjaCgoaW5wdXRFbCkgPT4ge1xyXG4gICAgICBpbnB1dEVsLmFkZEV2ZW50TGlzdGVuZXIoXCJpbnB1dFwiLCAoKSA9PiB7XHJcbiAgICAgICAgdGhpcy5fY2hlY2tJbnB1dFZhbGlkaXR5KGlucHV0RWwpO1xyXG4gICAgICAgIHRoaXMuX3RvZ2dsZUJ1dHRvblN0YXRlKCk7XHJcbiAgICAgIH0pO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICByZXNldFZhbGlkYXRpb24oKSB7XHJcbiAgICB0aGlzLl90b2dnbGVCdXR0b25TdGF0ZSgpO1xyXG4gICAgdGhpcy5faW5wdXRFbHMuZm9yRWFjaCgoaW5wdXRFbCkgPT4ge1xyXG4gICAgICB0aGlzLl9oaWRlSW5wdXRlcnJvcihpbnB1dEVsKTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgZW5hYmxlVmFsaWRhdGlvbigpIHtcclxuICAgIHRoaXMuX2Zvcm1FbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGV2dCkgPT4ge1xyXG4gICAgICBldnQucHJldmVudERlZmF1bHQoKTtcclxuICAgIH0pO1xyXG4gICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuICB9XHJcbn1cclxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXAge1xyXG4gIGNvbnN0cnVjdG9yKHsgcG9wdXBTZWxlY3RvciB9KSB7XHJcbiAgICB0aGlzLl9wb3B1cEVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHBvcHVwU2VsZWN0b3IpO1xyXG4gICAgdGhpcy5faGFuZGxlRXNjID0gKGUpID0+IHtcclxuICAgICAgdGhpcy5faGFuZGxlRXNjQ2xvc2UoZSk7XHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgb3BlbigpIHtcclxuICAgIHRoaXMuX3BvcHVwRWxlbWVudC5jbGFzc0xpc3QuYWRkKFwibW9kYWxfb3BlbmVkXCIpO1xyXG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgdGhpcy5faGFuZGxlRXNjKTtcclxuICB9XHJcblxyXG4gIGNsb3NlKCkge1xyXG4gICAgdGhpcy5fcG9wdXBFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoXCJtb2RhbF9vcGVuZWRcIik7XHJcbiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCB0aGlzLl9oYW5kbGVFc2MpO1xyXG4gIH1cclxuXHJcbiAgX2hhbmRsZUVzY0Nsb3NlKGUpIHtcclxuICAgIGlmIChlLmtleSA9PT0gXCJFc2NhcGVcIikge1xyXG4gICAgICB0aGlzLmNsb3NlKCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBzZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgIHRoaXMuX3BvcHVwRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGV2dCkgPT4ge1xyXG4gICAgICBpZiAoXHJcbiAgICAgICAgZXZ0LnRhcmdldCA9PT0gdGhpcy5fcG9wdXBFbGVtZW50IHx8XHJcbiAgICAgICAgZXZ0LnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoXCJtb2RhbF9fY2xvc2UtYnV0dG9uXCIpXHJcbiAgICAgICkge1xyXG4gICAgICAgIHRoaXMuY2xvc2UoKTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfVxyXG59XHJcbiIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cFwiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoRm9ybSBleHRlbmRzIFBvcHVwIHtcclxuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yLCBoYW5kbGVGb3JtU3VibWl0KSB7XHJcbiAgICBzdXBlcih7IHBvcHVwU2VsZWN0b3IgfSk7XHJcbiAgICB0aGlzLl9oYW5kbGVGb3JtU3VibWl0ID0gaGFuZGxlRm9ybVN1Ym1pdDtcclxuICAgIHRoaXMuX3BvcHVwRm9ybSA9IHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19mb3JtXCIpO1xyXG4gICAgdGhpcy5faW5wdXRzID0gdGhpcy5fcG9wdXBGb3JtLnF1ZXJ5U2VsZWN0b3JBbGwoXCIubW9kYWxfX2lucHV0XCIpO1xyXG4gICAgdGhpcy5fc2F2ZUJ1dHRvbiA9IHRoaXMuX3BvcHVwRm9ybS5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19mb3JtLWJ1dHRvblwiKTtcclxuICAgIHRoaXMuX3NhdmVCdXR0b25UZXh0ID0gdGhpcy5fc2F2ZUJ1dHRvbi50ZXh0Q29udGVudDtcclxuICB9XHJcblxyXG4gIF9nZXRJbnB1dFZhbHVlcygpIHtcclxuICAgIHRoaXMuX2lucHV0VmFsdWVzID0ge307XHJcbiAgICB0aGlzLl9pbnB1dHMuZm9yRWFjaChcclxuICAgICAgKGlucHV0KSA9PiAodGhpcy5faW5wdXRWYWx1ZXNbaW5wdXQubmFtZV0gPSBpbnB1dC52YWx1ZSlcclxuICAgICk7XHJcbiAgICByZXR1cm4gdGhpcy5faW5wdXRWYWx1ZXM7XHJcbiAgfVxyXG5cclxuICByZXNldEZvcm0oKSB7XHJcbiAgICB0aGlzLl9wb3B1cEZvcm0ucmVzZXQoKTtcclxuICB9XHJcblxyXG4gIGdldEZvcm1OYW1lKCkge1xyXG4gICAgcmV0dXJuIHRoaXMuX3BvcHVwRm9ybS5nZXRBdHRyaWJ1dGUoXCJuYW1lXCIpO1xyXG4gIH1cclxuXHJcbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICB0aGlzLl9wb3B1cEZvcm0uYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoZXZ0KSA9PiB7XHJcbiAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICB0aGlzLl9oYW5kbGVGb3JtU3VibWl0KHRoaXMuX2dldElucHV0VmFsdWVzKCkpO1xyXG4gICAgfSk7XHJcbiAgICBzdXBlci5zZXRFdmVudExpc3RlbmVycygpO1xyXG4gIH1cclxuXHJcbiAgc2V0TG9hZGluZyhpc0xvYWRpbmcpIHtcclxuICAgIGlmIChpc0xvYWRpbmcgPT0gdHJ1ZSkge1xyXG4gICAgICB0aGlzLl9zYXZlQnV0dG9uLnRleHRDb250ZW50ID0gXCJTYXZpbmcuLi5cIjtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuX3NhdmVCdXR0b24udGV4dENvbnRlbnQgPSB0aGlzLl9zYXZlQnV0dG9uVGV4dDtcclxuICAgIH1cclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IENhcmQgZnJvbSBcIi4uL2NvbXBvbmVudHMvQ2FyZC5qc1wiO1xyXG5pbXBvcnQgRm9ybVZhbGlkYXRvciBmcm9tIFwiLi4vY29tcG9uZW50cy9Gb3JtVmFsaWRhdGlvbi5qc1wiO1xyXG5pbXBvcnQgUG9wdXBXaXRoSW1hZ2UgZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanNcIjtcclxuaW1wb3J0IFBvcHVwV2l0aEZvcm0gZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qc1wiO1xyXG5pbXBvcnQgVXNlckluZm8gZnJvbSBcIi4uL2NvbXBvbmVudHMvVXNlckluZm8uanNcIjtcclxuaW1wb3J0IFwiLi9pbmRleC5jc3NcIjtcclxuaW1wb3J0IHsgY29uZmlnIH0gZnJvbSBcIi4uL3V0aWxzL2NvbnN0YW50cy5qc1wiO1xyXG5pbXBvcnQgYXJvdW5kdGhldXMgZnJvbSBcIi4uL2ltYWdlcy9Bcm91bmR0aGV1cy5zdmdcIjtcclxuaW1wb3J0IFNlY3Rpb24gZnJvbSBcIi4uL2NvbXBvbmVudHMvU2VjdGlvbi5qc1wiO1xyXG5pbXBvcnQgQXBpIGZyb20gXCIuLi9jb21wb25lbnRzL0FwaS5qc1wiO1xyXG5pbXBvcnQgUG9wdXBDb25maXJtYXRpb24gZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBDb25maXJtYXRpb24uanNcIjtcclxuXHJcbmNvbnN0IGFyb3VuZFRoZVVTID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJBcm91bmR0aGVVU1wiKTtcclxuYXJvdW5kVGhlVVMuc3JjID0gYXJvdW5kdGhldXM7XHJcblxyXG4vLyBQcm9maWxlIGVkaXQgbW9kYWxcclxuY29uc3QgcHJvZmlsZUVkaXRCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3Byb2ZpbGUtZWRpdC1idXR0b25cIik7XHJcbmNvbnN0IHByb2ZpbGVBdmF0YXJCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2F2YXRhci1lZGl0LWJ1dHRvblwiKTtcclxuXHJcbi8vIFByb2ZpbGVcclxuXHJcbmNvbnN0IHByb2ZpbGVUaXRsZUlucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNuYW1lXCIpO1xyXG5jb25zdCBwcm9maWxlRGVzY3JpcHRpb25JbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjZGVzY3JpcHRpb25cIik7XHJcblxyXG4vLyBOZXcgY2FyZCBtb2RhbFxyXG5jb25zdCBuZXdDYXJkQWRkQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19hZGQtYnV0dG9uXCIpO1xyXG5cclxuY29uc3QgZm9ybVZhbGlkYXRvcnMgPSB7fTtcclxuXHJcbmNvbnN0IGVuYWJsZWRWYWxpZGF0aW9uID0gKGNvbmZpZykgPT4ge1xyXG4gIGNvbnN0IGZvcm1MaXN0ID0gQXJyYXkuZnJvbShkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKGNvbmZpZy5mb3JtU2VsZWN0b3IpKTtcclxuICBmb3JtTGlzdC5mb3JFYWNoKChmb3JtRWxlbWVudCkgPT4ge1xyXG4gICAgY29uc3QgdmFsaWRhdG9yID0gbmV3IEZvcm1WYWxpZGF0b3IoY29uZmlnLCBmb3JtRWxlbWVudCk7XHJcbiAgICBjb25zdCBmb3JtTmFtZSA9IGZvcm1FbGVtZW50LmdldEF0dHJpYnV0ZShcIm5hbWVcIik7XHJcbiAgICBmb3JtVmFsaWRhdG9yc1tmb3JtTmFtZV0gPSB2YWxpZGF0b3I7XHJcbiAgICB2YWxpZGF0b3IuZW5hYmxlVmFsaWRhdGlvbigpO1xyXG4gIH0pO1xyXG59O1xyXG5cclxuZW5hYmxlZFZhbGlkYXRpb24oY29uZmlnKTtcclxuLy9FdmVudCBoYW5kbGVyc1xyXG5cclxuZnVuY3Rpb24gaGFuZGxlUHJvZmlsZUVkaXRTdWJtaXQoaW5wdXRWYWx1ZXMpIHtcclxuICBwcm9maWxlRm9ybVBvcHVwLnNldExvYWRpbmcodHJ1ZSk7XHJcblxyXG4gIGFwaVxyXG4gICAgLmVkaXRQcm9maWxlSW5mbyhpbnB1dFZhbHVlcy5uYW1lLCBpbnB1dFZhbHVlcy5kZXNjcmlwdGlvbilcclxuICAgIC50aGVuKChyZXMpID0+IHtcclxuICAgICAgcHJvZmlsZUluZm8uc2V0VXNlckluZm8ocmVzKTtcclxuICAgICAgcHJvZmlsZUZvcm1Qb3B1cC5jbG9zZSgpO1xyXG4gICAgfSlcclxuICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgIGNvbnNvbGUubG9nKGVycik7XHJcbiAgICB9KVxyXG4gICAgLmZpbmFsbHkoKCkgPT4ge1xyXG4gICAgICBwcm9maWxlRm9ybVBvcHVwLnNldExvYWRpbmcoZmFsc2UpO1xyXG4gICAgfSk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGhhbmRsZUFkZENhcmRTdWJtaXQoZGF0YSkge1xyXG4gIGFkZENhcmRGb3JtUG9wdXAuc2V0TG9hZGluZyh0cnVlKTtcclxuICBhcGlcclxuICAgIC5hZGRDYXJkKGRhdGEpXHJcbiAgICAudGhlbigoY2FyZERhdGEpID0+IHtcclxuICAgICAgc2VjdGlvbi5hZGRJdGVtcyhnZW5lcmF0ZUNhcmQoY2FyZERhdGEpKTtcclxuICAgICAgZm9ybVZhbGlkYXRvcnNbXHJcbiAgICAgICAgYWRkQ2FyZEZvcm1Qb3B1cC5nZXRGb3JtTmFtZShcImFkZC1jYXJkLWZvcm1cIilcclxuICAgICAgXS5kaXNhYmxlQnRuKCk7XHJcbiAgICAgIGFkZENhcmRGb3JtUG9wdXAuY2xvc2UoKTtcclxuICAgICAgYWRkQ2FyZEZvcm1Qb3B1cC5yZXNldEZvcm0oKTtcclxuICAgIH0pXHJcbiAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICBjb25zb2xlLmxvZyhlcnIpO1xyXG4gICAgfSlcclxuICAgIC5maW5hbGx5KCgpID0+IHtcclxuICAgICAgYWRkQ2FyZEZvcm1Qb3B1cC5zZXRMb2FkaW5nKGZhbHNlKTtcclxuICAgIH0pO1xyXG59XHJcblxyXG5mdW5jdGlvbiBoYW5kbGVBdmF0YXJDaGFuZ2UoZGF0YSkge1xyXG4gIGVkaXRBdmF0YXJGb3JtUG9wdXAuc2V0TG9hZGluZyh0cnVlKTtcclxuICBhcGlcclxuICAgIC51cGRhdGVBdmF0YXIoZGF0YS5saW5rKVxyXG4gICAgLnRoZW4oKHJlcykgPT4ge1xyXG4gICAgICBjb25zb2xlLmxvZztcclxuICAgICAgcHJvZmlsZUluZm8uc2V0QXZhdGFyKHJlcyk7XHJcbiAgICAgIGVkaXRBdmF0YXJGb3JtUG9wdXAuY2xvc2UoKTtcclxuICAgICAgZWRpdEF2YXRhckZvcm1Qb3B1cC5yZXNldEZvcm0oKTtcclxuICAgIH0pXHJcbiAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICBjb25zb2xlLmxvZyhlcnIpO1xyXG4gICAgfSlcclxuICAgIC5maW5hbGx5KCgpID0+IHtcclxuICAgICAgZWRpdEF2YXRhckZvcm1Qb3B1cC5zZXRMb2FkaW5nKGZhbHNlKTtcclxuICAgIH0pO1xyXG59XHJcblxyXG5mdW5jdGlvbiBoYW5kbGVDYXJkRGVsZXRlKGNhcmQpIHtcclxuICBkZWxldGVDYXJkQ29uZmlybS5vcGVuKCk7XHJcblxyXG4gIGRlbGV0ZUNhcmRDb25maXJtLnNldFN1Ym1pdEFjdGlvbigoKSA9PiB7XHJcbiAgICBkZWxldGVDYXJkQ29uZmlybS5zZXRMb2FkaW5nKHRydWUpO1xyXG4gICAgYXBpXHJcbiAgICAgIC5kZWxldGVDYXJkKGNhcmQuaWQpXHJcbiAgICAgIC50aGVuKCgpID0+IHtcclxuICAgICAgICBkZWxldGVDYXJkQ29uZmlybS5jbG9zZSgpO1xyXG4gICAgICAgIGNhcmQuZGVsZXRlQ2FyZCgpO1xyXG4gICAgICB9KVxyXG4gICAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKGVycik7XHJcbiAgICAgIH0pXHJcbiAgICAgIC5maW5hbGx5KCgpID0+IHtcclxuICAgICAgICBkZWxldGVDYXJkQ29uZmlybS5zZXRMb2FkaW5nKGZhbHNlKTtcclxuICAgICAgfSk7XHJcbiAgfSk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGhhbmRsZUNhcmRDbGljayhuYW1lLCBsaW5rKSB7XHJcbiAgaW1hZ2VQb3B1cFByZXZpZXcub3BlbihuYW1lLCBsaW5rKTtcclxufVxyXG5cclxuZnVuY3Rpb24gaGFuZGxlQ2FyZExpa2UoY2FyZCkge1xyXG4gIGlmICghY2FyZC5pc0xpa2VkKSB7XHJcbiAgICBhcGlcclxuICAgICAgLmxpa2VDYXJkKGNhcmQuZ2V0SWQoKSlcclxuICAgICAgLnRoZW4oKHJlcykgPT4ge1xyXG4gICAgICAgIGNhcmQuc2V0TGlrZXMocmVzLmlzTGlrZWQpO1xyXG4gICAgICB9KVxyXG4gICAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKGVycik7XHJcbiAgICAgIH0pO1xyXG4gIH0gZWxzZSB7XHJcbiAgICBhcGlcclxuICAgICAgLnVubGlrZUNhcmQoY2FyZC5nZXRJZCgpKVxyXG4gICAgICAudGhlbigocmVzKSA9PiB7XHJcbiAgICAgICAgY2FyZC5zZXRMaWtlcyhyZXMuaXNMaWtlZCk7XHJcbiAgICAgIH0pXHJcbiAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgICAgY29uc29sZS5sb2coZXJyKTtcclxuICAgICAgfSk7XHJcbiAgfVxyXG59XHJcblxyXG4vL0Z1bmN0aW9uc1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGdlbmVyYXRlQ2FyZChjYXJkRGF0YSkge1xyXG4gIGNvbnN0IGNhcmQgPSBuZXcgQ2FyZChcclxuICAgIGNhcmREYXRhLFxyXG4gICAgXCIjdGVtcGxhdGVcIixcclxuICAgIGhhbmRsZUNhcmRDbGljayxcclxuICAgIGhhbmRsZUNhcmREZWxldGUsXHJcbiAgICBoYW5kbGVDYXJkTGlrZVxyXG4gICk7XHJcbiAgcmV0dXJuIGNhcmQuZ2V0VmlldygpO1xyXG59XHJcblxyXG4vLyBDbGFzcyBpbnN0YW5jZXNcclxuXHJcbmNvbnN0IGltYWdlUG9wdXBQcmV2aWV3ID0gbmV3IFBvcHVwV2l0aEltYWdlKFwiI2ltYWdlLXByZXZpZXctbW9kYWxcIik7XHJcbmltYWdlUG9wdXBQcmV2aWV3LnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcblxyXG4vL1Byb2ZpbGUgZm9ybVxyXG5jb25zdCBwcm9maWxlRm9ybVBvcHVwID0gbmV3IFBvcHVwV2l0aEZvcm0oXHJcbiAgXCIjcHJvZmlsZS1lZGl0LW1vZGFsXCIsXHJcbiAgaGFuZGxlUHJvZmlsZUVkaXRTdWJtaXRcclxuKTtcclxucHJvZmlsZUZvcm1Qb3B1cC5zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxucHJvZmlsZUVkaXRCdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZ1bmN0aW9uIChlKSB7XHJcbiAgY29uc3QgeyBuYW1lLCBqb2IgfSA9IHByb2ZpbGVJbmZvLmdldFVzZXJJbmZvKCk7XHJcbiAgcHJvZmlsZURlc2NyaXB0aW9uSW5wdXQudmFsdWUgPSBqb2I7XHJcbiAgcHJvZmlsZVRpdGxlSW5wdXQudmFsdWUgPSBuYW1lO1xyXG4gIHByb2ZpbGVGb3JtUG9wdXAub3BlbigpO1xyXG4gIGZvcm1WYWxpZGF0b3JzW1xyXG4gICAgcHJvZmlsZUZvcm1Qb3B1cC5nZXRGb3JtTmFtZShcInByb2ZpbGUtZWRpdC1mb3JtXCIpXHJcbiAgXS5yZXNldFZhbGlkYXRpb24oKTtcclxufSk7XHJcblxyXG4vL1VzZXIgaW5mb1xyXG5jb25zdCBwcm9maWxlSW5mbyA9IG5ldyBVc2VySW5mbyhcclxuICBcIi5wcm9maWxlX190aXRsZVwiLFxyXG4gIFwiLnByb2ZpbGVfX2Rlc2NyaXB0aW9uXCIsXHJcbiAgXCIucHJvZmlsZV9faW1hZ2VcIlxyXG4pO1xyXG5cclxuLy9BZGQgQ2FyZFxyXG5jb25zdCBhZGRDYXJkRm9ybVBvcHVwID0gbmV3IFBvcHVwV2l0aEZvcm0oXHJcbiAgXCIjbmV3LWNhcmQtbW9kYWxcIixcclxuICBoYW5kbGVBZGRDYXJkU3VibWl0XHJcbik7XHJcbmFkZENhcmRGb3JtUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbm5ld0NhcmRBZGRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZ1bmN0aW9uICgpIHtcclxuICBhZGRDYXJkRm9ybVBvcHVwLm9wZW4oKTtcclxufSk7XHJcblxyXG4vL0F2YXRhciBlZGl0XHJcbmNvbnN0IGVkaXRBdmF0YXJGb3JtUG9wdXAgPSBuZXcgUG9wdXBXaXRoRm9ybShcclxuICBcIiNhdmF0YXItY2hhbmdlLW1vZGFsXCIsXHJcbiAgaGFuZGxlQXZhdGFyQ2hhbmdlXHJcbik7XHJcbmVkaXRBdmF0YXJGb3JtUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbnByb2ZpbGVBdmF0YXJCdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICBlZGl0QXZhdGFyRm9ybVBvcHVwLm9wZW4oKTtcclxufSk7XHJcblxyXG4vL0NhcmQgZGVsZXRlXHJcbmNvbnN0IGRlbGV0ZUNhcmRDb25maXJtID0gbmV3IFBvcHVwQ29uZmlybWF0aW9uKFwiI2NhcmQtZGVsZXRlLW1vZGFsXCIpO1xyXG5kZWxldGVDYXJkQ29uZmlybS5zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuY29uc3Qgc2VjdGlvbiA9IG5ldyBTZWN0aW9uKFxyXG4gIHtcclxuICAgIHJlbmRlcmVyOiAoY2FyZERhdGEpID0+IHtcclxuICAgICAgc2VjdGlvbi5hZGRJdGVtcyhnZW5lcmF0ZUNhcmQoY2FyZERhdGEpKTtcclxuICAgIH0sXHJcbiAgfSxcclxuICBcIi5jYXJkc19fbGlzdFwiXHJcbik7XHJcblxyXG4vL0FQSVxyXG5jb25zdCBhcGkgPSBuZXcgQXBpKHtcclxuICBiYXNlVXJsOiBcImh0dHBzOi8vYXJvdW5kLWFwaS5lbi50cmlwbGV0ZW4tc2VydmljZXMuY29tL3YxXCIsXHJcbiAgaGVhZGVyczoge1xyXG4gICAgYXV0aG9yaXphdGlvbjogXCI1MjViNGFkZS1lY2I3LTQ1M2EtYjRlYy1kOWUwZTU3MjI0OWZcIixcclxuICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxyXG4gIH0sXHJcbn0pO1xyXG5cclxuYXBpXHJcbiAgLmdldEluaXRpYWxDYXJkcygpXHJcbiAgLnRoZW4oKGRhdGEpID0+IHtcclxuICAgIHNlY3Rpb24ucmVuZGVySXRlbXMoZGF0YSk7XHJcbiAgfSlcclxuICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgY29uc29sZS5sb2coZXJyKTtcclxuICB9KTtcclxuXHJcbmFwaVxyXG4gIC5sb2FkVXNlckluZm8oKVxyXG4gIC50aGVuKChyZXMpID0+IHtcclxuICAgIHByb2ZpbGVJbmZvLnNldFVzZXJJbmZvKHJlcyk7XHJcbiAgICBwcm9maWxlSW5mby5zZXRBdmF0YXIocmVzKTtcclxuICB9KVxyXG4gIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICBjb25zb2xlLmxvZyhlcnIpO1xyXG4gIH0pO1xyXG4iLCJleHBvcnQgY29uc3QgaW5pdGlhbENhcmRzID0gW1xyXG4gIHtcclxuICAgIG5hbWU6IFwiWW9zaW1pdGUgVmFsbGV5XCIsXHJcbiAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vc29mdHdhcmUtZW5naW5lZXIvYXJvdW5kLXByb2plY3QveW9zZW1pdGUuanBnXCIsXHJcbiAgfSxcclxuICB7XHJcbiAgICBuYW1lOiBcIkxha2UgTG91aXNlXCIsXHJcbiAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vc29mdHdhcmUtZW5naW5lZXIvYXJvdW5kLXByb2plY3QvbGFrZS1sb3Vpc2UuanBnXCIsXHJcbiAgfSxcclxuICB7XHJcbiAgICBuYW1lOiBcIkJhbGQgTW91bnRhaW5zXCIsXHJcbiAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vc29mdHdhcmUtZW5naW5lZXIvYXJvdW5kLXByb2plY3QvYmFsZC1tb3VudGFpbnMuanBnXCIsXHJcbiAgfSxcclxuICB7XHJcbiAgICBuYW1lOiBcIkxhdGVtYXJcIixcclxuICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9hcm91bmQtcHJvamVjdC9sYXRlbWFyLmpwZ1wiLFxyXG4gIH0sXHJcbiAge1xyXG4gICAgbmFtZTogXCJWYW5vaXNlIE5hdGlvbmFsIFBhcmtcIixcclxuICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9hcm91bmQtcHJvamVjdC92YW5vaXNlLmpwZ1wiLFxyXG4gIH0sXHJcbiAge1xyXG4gICAgbmFtZTogXCJMYWdvIGRpIEJyYWllc1wiLFxyXG4gICAgbGluazogXCJodHRwczovL3ByYWN0aWN1bS1jb250ZW50LnMzLnVzLXdlc3QtMS5hbWF6b25hd3MuY29tL3NvZnR3YXJlLWVuZ2luZWVyL2Fyb3VuZC1wcm9qZWN0L2xhZ28uanBnXCIsXHJcbiAgfSxcclxuXTtcclxuXHJcbmV4cG9ydCBjb25zdCBjb25maWcgPSB7XHJcbiAgZm9ybVNlbGVjdG9yOiBcIi5tb2RhbF9fZm9ybVwiLFxyXG4gIGlucHV0U2VsZWN0b3I6IFwiLm1vZGFsX19pbnB1dFwiLFxyXG4gIHN1Ym1pdEJ1dHRvblNlbGVjdG9yOiBcIi5tb2RhbF9fZm9ybS1idXR0b25cIixcclxuICBpbmFjdGl2ZUJ1dHRvbkNsYXNzOiBcIm1vZGFsX19idXR0b25fZGlzYWJsZWRcIixcclxuICBpbnB1dEVycm9yQ2xhc3M6IFwibW9kYWxfX2lucHV0X3R5cGVfZXJyb3JcIixcclxuICBlcnJvckNsYXNzOiBcIm1vZGFsX19lcnJvcl92aXNpYmxlXCIsXHJcbn07XHJcbiIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgSW1hZ2VQb3B1cCBleHRlbmRzIFBvcHVwIHtcclxuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yKSB7XHJcbiAgICBzdXBlcih7IHBvcHVwU2VsZWN0b3IgfSk7XHJcbiAgICB0aGlzLl9pbWFnZVByZXZpZXcgPSB0aGlzLl9wb3B1cEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIiNpbWFnZS1wcmV2aWV3XCIpO1xyXG4gICAgdGhpcy5faW1hZ2VDYXB0aW9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNpbWFnZS1wcmV2aWV3LWNhcHRpb25cIik7XHJcbiAgfVxyXG5cclxuICBvcGVuKG5hbWUsIGxpbmspIHtcclxuICAgIHRoaXMuX2ltYWdlUHJldmlldy5zcmMgPSBsaW5rO1xyXG4gICAgdGhpcy5faW1hZ2VQcmV2aWV3LmFsdCA9IG5hbWU7XHJcbiAgICB0aGlzLl9pbWFnZUNhcHRpb24udGV4dENvbnRlbnQgPSBuYW1lO1xyXG4gICAgc3VwZXIub3BlbigpO1xyXG4gIH1cclxufVxyXG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBVc2VySW5mbyB7XHJcbiAgY29uc3RydWN0b3IobmFtZVNlbGVjdG9yLCBqb2JTZWxlY3RvciwgYXZhdGFyKSB7XHJcbiAgICB0aGlzLl9uYW1lID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihuYW1lU2VsZWN0b3IpO1xyXG4gICAgdGhpcy5fam9iID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihqb2JTZWxlY3Rvcik7XHJcbiAgICB0aGlzLl9hdmF0YXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGF2YXRhcik7XHJcbiAgfVxyXG4gIGdldFVzZXJJbmZvKCkge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgbmFtZTogdGhpcy5fbmFtZS50ZXh0Q29udGVudCxcclxuICAgICAgam9iOiB0aGlzLl9qb2IudGV4dENvbnRlbnQsXHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgc2V0VXNlckluZm8oeyBuYW1lLCBhYm91dCB9KSB7XHJcbiAgICB0aGlzLl9uYW1lLnRleHRDb250ZW50ID0gbmFtZTtcclxuICAgIHRoaXMuX2pvYi50ZXh0Q29udGVudCA9IGFib3V0O1xyXG4gIH1cclxuICBzZXRBdmF0YXIoeyBhdmF0YXIgfSkge1xyXG4gICAgdGhpcy5fYXZhdGFyLnNyYyA9IGF2YXRhcjtcclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cENvbmZpcm1hdGlvbiBleHRlbmRzIFBvcHVwIHtcclxuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yKSB7XHJcbiAgICBzdXBlcih7IHBvcHVwU2VsZWN0b3IgfSk7XHJcbiAgICB0aGlzLl9wb3B1cEZvcm0gPSB0aGlzLl9wb3B1cEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fZm9ybVwiKTtcclxuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbiA9IHRoaXMuX3BvcHVwRm9ybS5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19mb3JtLWJ1dHRvblwiKTtcclxuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvblRleHQgPSB0aGlzLl9zdWJtaXRCdXR0b24udGV4dENvbnRlbnQ7XHJcbiAgfVxyXG5cclxuICBzZXRMb2FkaW5nKGlzTG9hZGluZykge1xyXG4gICAgaWYgKGlzTG9hZGluZykge1xyXG4gICAgICB0aGlzLl9zdWJtaXRCdXR0b24udGV4dENvbnRlbnQgPSBcIlNhdmluZy4uXCI7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLl9zdWJtaXRCdXR0b24udGV4dENvbnRlbnQgPSB0aGlzLl9zdWJtaXRCdXR0b25UZXh0O1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgc2V0U3VibWl0QWN0aW9uKGhhbmRsZUZvcm1TdWJtaXQpIHtcclxuICAgIHRoaXMuX2hhbmRsZUZvcm1TdWJtaXQgPSBoYW5kbGVGb3JtU3VibWl0O1xyXG4gIH1cclxuXHJcbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICB0aGlzLl9wb3B1cEZvcm0uYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoZXZ0KSA9PiB7XHJcbiAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICB0aGlzLl9oYW5kbGVGb3JtU3VibWl0KCk7XHJcbiAgICB9KTtcclxuICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgfVxyXG59XHJcbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFNlY3Rpb24ge1xyXG4gIGNvbnN0cnVjdG9yKHsgcmVuZGVyZXIgfSwgY29udGFpbmVyU2VsZWN0b3IpIHtcclxuICAgIHRoaXMuX2NvbnRhaW5lckVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGNvbnRhaW5lclNlbGVjdG9yKTtcclxuICBcclxuICAgIHRoaXMuX3JlbmRlcmVyID0gcmVuZGVyZXI7XHJcbiAgfVxyXG5cclxuICByZW5kZXJJdGVtcyhpdGVtcykge1xyXG4gICAgaXRlbXMuZm9yRWFjaCgoaXRlbSkgPT4ge1xyXG4gICAgICB0aGlzLl9yZW5kZXJlcihpdGVtKTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgYWRkSXRlbXMoaXRlbSkge1xyXG4gICAgdGhpcy5fY29udGFpbmVyRWxlbWVudC5wcmVwZW5kKGl0ZW0pO1xyXG4gIH1cclxufVxyXG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBBcGkge1xyXG4gIGNvbnN0cnVjdG9yKHsgYmFzZVVybCwgaGVhZGVycyB9KSB7XHJcbiAgICB0aGlzLl9iYXNlVXJsID0gYmFzZVVybDtcclxuICAgIHRoaXMuX2hlYWRlcnMgPSBoZWFkZXJzO1xyXG4gIH1cclxuXHJcbiAgZ2V0SW5pdGlhbENhcmRzKCkge1xyXG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzYCwge1xyXG4gICAgICBtZXRob2Q6IFwiR0VUXCIsXHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICB9KS50aGVuKHRoaXMuX2NoZWNrUmVzcG9uc2UpO1xyXG4gIH1cclxuXHJcbiAgX2NoZWNrUmVzcG9uc2UocmVzKSB7XHJcbiAgICBpZiAocmVzLm9rKSB7XHJcbiAgICAgIHJldHVybiByZXMuanNvbigpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGBFcnJvcjoke3Jlcy5zdGF0dXN9YCk7XHJcbiAgfVxyXG5cclxuICBsb2FkVXNlckluZm8oKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vdXNlcnMvbWVgLCB7XHJcbiAgICAgIG1ldGhvZDogXCJHRVRcIixcclxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgIH0pLnRoZW4odGhpcy5fY2hlY2tSZXNwb25zZSk7XHJcbiAgfVxyXG5cclxuICBlZGl0UHJvZmlsZUluZm8odGl0bGUsIGRlc2NyaXB0aW9uKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vdXNlcnMvbWVgLCB7XHJcbiAgICAgIG1ldGhvZDogXCJQQVRDSFwiLFxyXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XHJcbiAgICAgICAgbmFtZTogdGl0bGUsXHJcbiAgICAgICAgYWJvdXQ6IGRlc2NyaXB0aW9uLFxyXG4gICAgICB9KSxcclxuICAgIH0pLnRoZW4odGhpcy5fY2hlY2tSZXNwb25zZSk7XHJcbiAgfVxyXG5cclxuICBhZGRDYXJkKGNhcmQpIHtcclxuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkc2AsIHtcclxuICAgICAgbWV0aG9kOiBcIlBPU1RcIixcclxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xyXG4gICAgICAgIG5hbWU6IGNhcmQubmFtZSxcclxuICAgICAgICBsaW5rOiBjYXJkLmxpbmssXHJcbiAgICAgIH0pLFxyXG4gICAgfSkudGhlbih0aGlzLl9jaGVja1Jlc3BvbnNlKTtcclxuICB9XHJcblxyXG4gIGRlbGV0ZUNhcmQoaWQpIHtcclxuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkcy8ke2lkfWAsIHtcclxuICAgICAgbWV0aG9kOiBcIkRFTEVURVwiLFxyXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgfSkudGhlbih0aGlzLl9jaGVja1Jlc3BvbnNlKTtcclxuICB9XHJcblxyXG4gIGxpa2VDYXJkKGlkKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHMvJHtpZH0vbGlrZXNgLCB7XHJcbiAgICAgIG1ldGhvZDogXCJQVVRcIixcclxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgIH0pLnRoZW4odGhpcy5fY2hlY2tSZXNwb25zZSk7XHJcbiAgfVxyXG5cclxuICB1bmxpa2VDYXJkKGlkKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHMvJHtpZH0vbGlrZXNgLCB7XHJcbiAgICAgIG1ldGhvZDogXCJERUxFVEVcIixcclxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgIH0pLnRoZW4odGhpcy5fY2hlY2tSZXNwb25zZSk7XHJcbiAgfVxyXG5cclxuICB1cGRhdGVBdmF0YXIodXJsKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vdXNlcnMvbWUvYXZhdGFyYCwge1xyXG4gICAgICBtZXRob2Q6IFwiUEFUQ0hcIixcclxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xyXG4gICAgICAgIGF2YXRhcjogdXJsLFxyXG4gICAgICB9KSxcclxuICAgIH0pLnRoZW4odGhpcy5fY2hlY2tSZXNwb25zZSk7XHJcbiAgfVxyXG5cclxuICBsb2FkUGFnZSgpIHtcclxuICAgIHJldHVybiBQcm9taXNlLmFsbChbdGhpcy5nZXRJbml0aWFsQ2FyZHMoKSwgdGhpcy5sb2FkVXNlckluZm8oKV0pO1xyXG4gIH1cclxufVxyXG4iXSwibmFtZXMiOlsiQ2FyZCIsImNvbnN0cnVjdG9yIiwiZGF0YSIsImNhcmRTZWxlY3RvciIsImhhbmRsZUNhcmRDbGljayIsImhhbmRsZUNhcmREZWxldGUiLCJoYW5kbGVDYXJkTGlrZSIsInRoaXMiLCJfbmFtZSIsIm5hbWUiLCJfbGluayIsImxpbmsiLCJpc0xpa2VkIiwiaWQiLCJfaWQiLCJfY2FyZFNlbGVjdG9yIiwiX2hhbmRsZUNhcmRDbGljayIsIl9oYW5kbGVDYXJkRGVsZXRlIiwiX2hhbmRsZUNhcmRMaWtlIiwiZ2V0VmlldyIsIl9jYXJkRWxlbWVudCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImNvbnRlbnQiLCJjbG9uZU5vZGUiLCJfc2V0RXZlbnRMaXN0ZW5lcnMiLCJfcmVuZGVyTGlrZXMiLCJfbGlrZUJ1dHRvbiIsIl9kZWxldGVCdXR0b24iLCJjYXJkSW1hZ2VFbCIsImNhcmRUaXRsZUVsIiwiYWRkRXZlbnRMaXN0ZW5lciIsInNyYyIsImFsdCIsInRleHRDb250ZW50Iiwic2V0TGlrZXMiLCJjbGFzc0xpc3QiLCJhZGQiLCJyZW1vdmUiLCJnZXRJZCIsImRlbGV0ZUNhcmQiLCJGb3JtVmFsaWRhdG9yIiwiY29uZmlnIiwiZm9ybUVsZW1lbnQiLCJfaW5wdXRTZWxlY3RvciIsImlucHV0U2VsZWN0b3IiLCJfc3VibWl0QnV0dG9uU2VsZWN0b3IiLCJzdWJtaXRCdXR0b25TZWxlY3RvciIsIl9pbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiaW5hY3RpdmVCdXR0b25DbGFzcyIsIl9pbnB1dEVycm9yQ2xhc3MiLCJpbnB1dEVycm9yQ2xhc3MiLCJfZXJyb3JDbGFzcyIsImVycm9yQ2xhc3MiLCJfZm9ybUVsZW1lbnQiLCJfaGFzSW52YWxpZElucHV0IiwiX2lucHV0RWxzIiwiZXZlcnkiLCJpbnB1dEVsIiwidmFsaWRpdHkiLCJ2YWxpZCIsIl9zaG93SW5wdXRFcnJvciIsImVycm9yTWVzc2FnZUVsIiwidmFsaWRhdGlvbk1lc3NhZ2UiLCJfaGlkZUlucHV0ZXJyb3IiLCJfY2hlY2tJbnB1dFZhbGlkaXR5IiwiX3RvZ2dsZUJ1dHRvblN0YXRlIiwiZGlzYWJsZUJ0biIsIl9lbmFibGVCdG4iLCJfc3VibWl0QnRuIiwiZGlzYWJsZWQiLCJxdWVyeVNlbGVjdG9yQWxsIiwiZm9yRWFjaCIsInJlc2V0VmFsaWRhdGlvbiIsImVuYWJsZVZhbGlkYXRpb24iLCJldnQiLCJwcmV2ZW50RGVmYXVsdCIsIlBvcHVwIiwiX3JlZiIsInBvcHVwU2VsZWN0b3IiLCJfcG9wdXBFbGVtZW50IiwiX2hhbmRsZUVzYyIsImUiLCJfaGFuZGxlRXNjQ2xvc2UiLCJvcGVuIiwiY2xvc2UiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwia2V5Iiwic2V0RXZlbnRMaXN0ZW5lcnMiLCJ0YXJnZXQiLCJjb250YWlucyIsIlBvcHVwV2l0aEZvcm0iLCJoYW5kbGVGb3JtU3VibWl0Iiwic3VwZXIiLCJfaGFuZGxlRm9ybVN1Ym1pdCIsIl9wb3B1cEZvcm0iLCJfaW5wdXRzIiwiX3NhdmVCdXR0b24iLCJfc2F2ZUJ1dHRvblRleHQiLCJfZ2V0SW5wdXRWYWx1ZXMiLCJfaW5wdXRWYWx1ZXMiLCJpbnB1dCIsInZhbHVlIiwicmVzZXRGb3JtIiwicmVzZXQiLCJnZXRGb3JtTmFtZSIsImdldEF0dHJpYnV0ZSIsInNldExvYWRpbmciLCJpc0xvYWRpbmciLCJnZXRFbGVtZW50QnlJZCIsInByb2ZpbGVFZGl0QnRuIiwicHJvZmlsZUF2YXRhckJ0biIsInByb2ZpbGVUaXRsZUlucHV0IiwicHJvZmlsZURlc2NyaXB0aW9uSW5wdXQiLCJuZXdDYXJkQWRkQnV0dG9uIiwiZm9ybVZhbGlkYXRvcnMiLCJjYXJkIiwiZGVsZXRlQ2FyZENvbmZpcm0iLCJzZXRTdWJtaXRBY3Rpb24iLCJhcGkiLCJ0aGVuIiwiY2F0Y2giLCJlcnIiLCJjb25zb2xlIiwibG9nIiwiZmluYWxseSIsImltYWdlUG9wdXBQcmV2aWV3IiwidW5saWtlQ2FyZCIsInJlcyIsImxpa2VDYXJkIiwiZ2VuZXJhdGVDYXJkIiwiY2FyZERhdGEiLCJmb3JtU2VsZWN0b3IiLCJBcnJheSIsImZyb20iLCJ2YWxpZGF0b3IiLCJmb3JtTmFtZSIsIl9pbWFnZVByZXZpZXciLCJfaW1hZ2VDYXB0aW9uIiwicHJvZmlsZUZvcm1Qb3B1cCIsImlucHV0VmFsdWVzIiwiZWRpdFByb2ZpbGVJbmZvIiwiZGVzY3JpcHRpb24iLCJwcm9maWxlSW5mbyIsInNldFVzZXJJbmZvIiwiam9iIiwiZ2V0VXNlckluZm8iLCJuYW1lU2VsZWN0b3IiLCJqb2JTZWxlY3RvciIsImF2YXRhciIsIl9qb2IiLCJfYXZhdGFyIiwiYWJvdXQiLCJzZXRBdmF0YXIiLCJfcmVmMiIsImFkZENhcmRGb3JtUG9wdXAiLCJhZGRDYXJkIiwic2VjdGlvbiIsImFkZEl0ZW1zIiwiZWRpdEF2YXRhckZvcm1Qb3B1cCIsInVwZGF0ZUF2YXRhciIsIl9zdWJtaXRCdXR0b24iLCJfc3VibWl0QnV0dG9uVGV4dCIsImNvbnRhaW5lclNlbGVjdG9yIiwicmVuZGVyZXIiLCJfY29udGFpbmVyRWxlbWVudCIsIl9yZW5kZXJlciIsInJlbmRlckl0ZW1zIiwiaXRlbXMiLCJpdGVtIiwicHJlcGVuZCIsImJhc2VVcmwiLCJoZWFkZXJzIiwiX2Jhc2VVcmwiLCJfaGVhZGVycyIsImdldEluaXRpYWxDYXJkcyIsImZldGNoIiwibWV0aG9kIiwiX2NoZWNrUmVzcG9uc2UiLCJvayIsImpzb24iLCJQcm9taXNlIiwicmVqZWN0Iiwic3RhdHVzIiwibG9hZFVzZXJJbmZvIiwidGl0bGUiLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsInVybCIsImxvYWRQYWdlIiwiYWxsIiwiYXV0aG9yaXphdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=